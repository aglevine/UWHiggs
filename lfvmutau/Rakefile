# Get common recipes
recipes = ENV['fsa'] + '/PlotTools/rake/recipes.rake'
import recipes

$jobid = ENV['jobid']
$selection = ENV['selection']
$isolation = ENV['iso']
$jetcorrection = ENV['jetcorrection']

# Figure out what run period we are in
$period = '8TeV'
PU = ENV['PU']

#if $jobid.include? '8TeV'
#  $period = '8TeV'
#end


################################################################################
## Sample names ################################################################
################################################################################
#
# Get sample names containing a substring
def get_sample_names(substring)
  inputs = Dir.glob("inputs/#{$jobid}/*.txt").select {|x| x.include? substring}
  inputs = inputs.map{|x| File.basename(x).sub(".txt", "")}
  #puts substring
  #puts inputs
  #puts $jobid
  return inputs
end
#
samples = Hash[
  #"ewk" => Array['Zjets_M50'], 
   # 'TTplusJets_madgraph'], 
  "jes" => get_sample_names('jes'),
  "ttbar" => Array['TTplusJets_madgraph'],
  "ttbar" => get_sample_names('TTJets'),
  "ttbar05" => get_sample_names('TTJets'),	
  "wjets" => get_sample_names('Wplus'),
  "wwjets" => get_sample_names('WWJets'),
  #"zjets" => Array['Zjets_M50'],
  "zjets" => get_sample_names('Zjets_M50'),
  "zjetsother" => get_sample_names('OtherM50'),
  "old_signal" => get_sample_names('H2Tau_M-126'),
  "new_signal" => get_sample_names('Dec9'),	
  #"sm" => Array['VBF_H2Tau_M-125'],
  "smvbf" => get_sample_names('VBF_H2Tau_M-125'),
  "smgg" => get_sample_names('GGH_H2Tau_M-125'),
	#'GluGlu_H2Tau_M-125'], not working (July 1 2013)
  "data_mt" => get_sample_names('data_SingleMu'),
  "DY1" => get_sample_names('DY1Jets'),
  "DY2" => get_sample_names('DY2Jets'),
  "DY3" => get_sample_names('DY3Jets'),
  "DY4" => get_sample_names('DY4Jets'),

  "DYother" => get_sample_names('OtherDY'),
  "embedded" => get_sample_names('Embedded'),
  "mmt" => get_sample_names('mmt'),
  "plusminusmutau" => get_sample_names('Minus'),
  "Suvadeep" => get_sample_names('Suvadeep'),
  "lfvvbf" => get_sample_names('LFVVBF'),
  "singletop"=>get_sample_names('_t'),
  "ttfull"=>get_sample_names('ull'),
  "ttsemi"=>get_sample_names('emi'),
  "filtered"=>get_sample_names('filtered')

]

#samples = Hash[
  #"ewk" => Array[ 
  #'TTplusJets_madgraph'], 
  
#"ttbar" => get_sample_names('TTJets'),
 # "wjets" => get_sample_names('Wplus')
#  "wwjets" => get_sample_names('WWJets'),
#  "zjets" => Array['Zjets_M50'],

 # "old_signal" => get_sample_names('H2Tau_M-126'),
#  "new_signal" => get_sample_names('Minus'),   
#  "sm" => Array['VBF_H2Tau_M-125'],
        #'GluGlu_H2Tau_M-125'], not working (July 1 2013)
#  "data_mt" => get_sample_names("data_SingleMu") 
#]

# Function to get the .root files for an analyzer and samples
def get_analyzer_results(analyzer, the_samples)
  output = Array.new
  analyzer_base = analyzer.sub('.py', '')
  puts the_samples
  puts analyzer
  the_samples.each do |sample|
    output << "results/#{$jobid}/#{$selection}#{$jetcorrection}/iso#{$isolation}/#{analyzer_base}/#{sample}.root"
    #output <<  "results/#{$jobid}/#{analyzer_base}/#{sample}.root"
  end
  return output
end

################################################################################
## Recipes to analyze LFV H->mutau
##  targets:
##     mt
################################################################################
#puts samples['wjets']
#puts samples['ttbar']
#puts samples['singletop']
task :mttight => get_analyzer_results("AnalyzeMuTauTightvbfNew.py", samples['singletop']+ samples['smvbf'] + samples['smgg'] + samples['data_mt'] + samples['ttbar'] + samples['wwjets']+samples['new_signal'])
task :mttightRedoFakes => get_analyzer_results("AnalyzeMuTauTightvbfNew.py",samples['ttsemi']+samples['ttfull'])
task :mttightRedoFakesJes => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py",samples['wwjets']+samples['new_signal']+samples['ttsemi']+samples['ttfull'])
task :mttightZjetsM50 => get_analyzer_results("AnalyzeMuTauTightvbfNew.py", samples['zjets'])
task :mttightjesZjetsM50 => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py", samples['zjets'])
task :mttightjesWjetsFiltered => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py", samples['filtered'])
task :mttightotherM50 => get_analyzer_results("AnalyzeMuTauTightvbfNew.py",samples['zjetsother'])
task :mttightjesotherM50 => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py",samples['zjetsother'])
task :mttightotherDY => get_analyzer_results("AnalyzeMuTauTightvbfNew.py",samples['DYother'])
task :mttightjesotherDY => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py",samples['DYother'])
#task :mttightsingletop => get_analyzer_results("AnalyzeMuTauTightvbfNew.py", samples['singletop'])
#task :mttightnewsignal => get_analyzer_results("AnalyzeMuTauTightvbfNew.py",samples['new_signal'])
task :mttightwjets => get_analyzer_results("AnalyzeMuTauTightvbfNew.py" ,samples['wjets'])
task :mttightwjetsjes => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py" ,samples['wjets'])
task :mttightjes => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py",samples['smvbf'] + samples['smgg'] + samples['ttbar'] + samples['wwjets'])
#task :mttightsm => get_analyzer_results("AnalyzeMuTauTightvbfNew.py" ,samples['smvbf']+ samples['smgg'])
#task :mttightsmjes => get_analyzer_results("AnalyzeMuTauTightvbfTestJes.py",samples['smvbf']+samples['smgg'])
#task :mttightjeslfvvbf => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py", samples['lfvvbf'])
#task :suvadeepMC => get_analyzer_results("AnalyzeMuTauTightvbfNew.py",samples['Suvadeep'])
#task :plusminusmutau => get_analyzer_results("AnalyzeMuTauTightvbfNew.py" , samples['plusminusmutau'])
task :dataonlymttight => get_analyzer_results("AnalyzeMuTauTightvbfNew.py", samples['data_mt'])
##use $PU = false for samples with no pileup
task :pu1mttight  => get_analyzer_results(  "AnalyzeMuTauTightvbfNew.py",samples['old_signal'])
task :pu1mttightjes => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py",samples['old_signal'])
#Task for samples on login05
##task :mttight05 => get_analyzer_results("AnalyzeMuTauTightvbf.py", samples['wjets'] + samples['ttbar05'])
task :embedmttight => get_analyzer_results("AnalyzeMuTauTightvbfNew.py", samples['embedded'])
#task :embedmttightjes => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py", samples['embedded'])
task :DYmttight => get_analyzer_results("AnalyzeMuTauTightvbfNew.py",samples['DY1']+samples['DY2']+samples['DY3']+samples['DY4'])
task :DYmttightjes => get_analyzer_results("AnalyzeMuTauTightvbfNewJes.py",samples['DY1']+samples['DY2']+samples['DY3']+samples['DY4'])
#task :mmttight => get_analyzer_results("AnalyzeMuMuTauTight.py",samples['mmt'])
